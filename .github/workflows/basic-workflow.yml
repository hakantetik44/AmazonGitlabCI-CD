name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Tüm workflow için permissions ekleyelim
permissions:
  contents: read
  pages: write
  id-token: write
  checks: write # Test sonuçları için

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml -DskipTests
    
    - name: Run Tests with Allure
      run: |
        mvn clean test
        mvn allure:report
      
    - name: List Generated Files
      run: |
        echo "Listing target directory:"
        ls -la target/
        echo "Listing site directory:"
        ls -la target/site/ || echo "Site directory not found"
        echo "Listing allure-results:"
        ls -la target/allure-results/ || echo "Allure results not found"
      
    - name: Generate Allure Report
      if: always()
      run: |
        mvn allure:report
        echo "Checking Allure Report directory:"
        ls -la target/site/allure-maven-plugin/ || echo "Allure report not found"
      
    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload Pages Artifact
      uses: actions/upload-pages-artifact@v3
      if: always()
      with:
        path: target/site/allure-maven-plugin

    - name: Store Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          target/surefire-reports
          target/allure-results
        retention-days: 30
    
  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 