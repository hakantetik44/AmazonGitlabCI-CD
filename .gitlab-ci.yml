variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  CHROME_OPTIONS: "--no-sandbox --headless --disable-dev-shm-usage"
  DOCKER_TLS_CERTDIR: "/certs"
  FF_USE_LEGACY_ARTIFACTS_UPLOAD: "true"
  ARTIFACT_COMPRESSION_LEVEL: "fastest"
  TRANSFER_METER_FREQUENCY: "2s"
  GIT_STRATEGY: clone

image: maven:3.9.6-eclipse-temurin-17

services:
  - name: docker:dind
    command: ["--tls=false"]

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .m2/repository
    - .cache/selenium

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'external_pull_request_event'
      when: never
    - when: always

stages:
  - test
  - build
  - deploy

test:
  stage: test
  before_script:
    - apt-get update && apt-get install -y wget unzip curl gnupg2
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    - echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list
    - apt-get update && apt-get install -y google-chrome-stable
    - mkdir -p .cache/selenium
    - cd .cache/selenium
    - wget -q "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/114.0.5735.90/linux64/chromedriver-linux64.zip"
    - unzip -q chromedriver-linux64.zip
    - chmod +x chromedriver-linux64/chromedriver
    - mv chromedriver-linux64/chromedriver /usr/local/bin/
    - cd ../../
    - export CHROME_BIN=/usr/bin/google-chrome
    - export CHROME_PATH=/usr/local/bin/chromedriver
    - echo "Chrome version: $(google-chrome --version)"
    - echo "ChromeDriver version: $(chromedriver --version)"

  script:
    - echo "üöÄ Starting tests..."
    - java -version
    - mvn -version
    - export CHROME_OPTIONS="--headless --no-sandbox --disable-dev-shm-usage --disable-gpu --remote-debugging-port=9222"
    - mkdir -p target/allure-results target/allure-report target/surefire-reports
    - mvn clean test allure:report || echo "‚ö†Ô∏è Test or report generation failed"
    - if [ -d "target" ]; then tar czf artifacts.tar.gz target/; fi

  artifacts:
    when: always
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
    paths:
      - target/
      - artifacts.tar.gz
    expire_in: 1 week

build:
  stage: build
  script:
    - echo "Building project..."
    - mvn package
  artifacts:
    paths:
      - target/*.jar
    expire_in: 1 week
  rules:
    - if: $CI_COMMIT_BRANCH
      when: always

pages:
  stage: deploy
  dependencies:
    - test
  script:
    - mkdir -p public
    - if [ -d "target/allure-report" ]; then cp -r target/allure-report/* public/; else echo "<html><body><h1>No Test Report Available</h1></body></html>" > public/index.html; fi
    - |
      {
        echo "Test Summary"
        echo "============"
        echo "Build: $CI_BUILD_ID"
        echo "Branch: $CI_COMMIT_REF_NAME"
        echo "Commit: $CI_COMMIT_SHA"
        echo "Date: $(date)"
        echo
        echo "Test Results"
        echo "============"
      
        if [ -d "target/surefire-reports" ]; then
          TOTAL=$(grep -c "<testcase" target/surefire-reports/TEST-*.xml || echo "0")
          FAILED=$(grep -c "<failure" target/surefire-reports/TEST-*.xml || echo "0")
          echo "Total Tests: $TOTAL"
          echo "Failed: $FAILED"
        else
          echo "No test results found"
        fi
      } > public/summary.txt

  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - main
