variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  FF_USE_LEGACY_ARTIFACTS_UPLOAD: "true"
  SELENIUM_URL: "http://selenium-chrome:4444/wd/hub"
  CHROME_OPTIONS: "--headless --no-sandbox --disable-dev-shm-usage --disable-gpu --window-size=1920,1080"

image: node:18

services:
  - name: selenium/standalone-chrome:latest
    alias: selenium-chrome

cache:
  paths:
    - .m2/repository
  key: "$CI_COMMIT_REF_SLUG"

stages:
  - build
  - test
  - report
  - deploy

build:
  stage: build
  script:
    - npm install

test:
  stage: test
  before_script:
    - apt-get update && apt-get install -y jq

    - echo "🔍 Selenium Grid bağlantısı kontrol ediliyor..."
    - |
      timeout 60s bash -c 'until curl -s -f "http://selenium-chrome:4444/wd/hub/status" > /dev/null; do echo "⏳ Selenium Grid başlatılıyor..."; sleep 2; done'
    - echo "✅ Selenium Grid hazır!"
  script:
    - echo "🚀 Tests başlatılıyor..."
    - echo "⚙️ Maven ayarları yapılandırılıyor..."
    - |
      export MAVEN_OPTS="$MAVEN_OPTS \
        -Dselenium.grid.url=$SELENIUM_URL \
        -Dwebdriver.chrome.whitelistedIps= \
        -Dcucumber.publish.quiet=true \
        -Dwebdriver.timeouts.implicitlywait=30000 \
        -Dwebdriver.timeouts.pageLoadTimeout=30000"

    - echo "🧪 Testler çalıştırılıyor..."
    - |
      mvn clean test -Dtest=TestRunner \
        -Dcucumber.plugin="pretty,\
        html:target/cucumber-reports/report.html,\
        json:target/cucumber-reports/cucumber.json,\
        io.qameta.allure.cucumber7jvm.AllureCucumber7Jvm,\
        rerun:target/cucumber-reports/rerun.txt,\
        usage:target/cucumber-reports/usage.json,\
        junit:target/cucumber-reports/junit.xml,\
        message:target/cucumber-reports/messages.ndjson" \
        -Dallure.results.directory=target/allure-results \
        -Dallure.link.issue.pattern=https://gitlab.com/fildisili88/AmazonProject/-/issues/{} \
        -Dallure.link.tms.pattern=https://gitlab.com/fildisili88/AmazonProject/-/issues/{} \
        -Dcucumber.execution.dry-run=false \
        -Dcucumber.execution.strict=true \
        -Dcucumber.execution.parallel.enabled=false \
        -Dcucumber.ansi-colors.disabled=false \
        -Dcucumber.filter.tags="not @ignore" \
        -Dcucumber.snippet-type=camelcase \
        -Dselenium.grid.url=$SELENIUM_URL \
        -Dwebdriver.remote.driver=chrome \
        -Dwebdriver.remote.browser=chrome \
        -Dwebdriver.chrome.arguments="$CHROME_OPTIONS" || true

    - |
      if [ -f "target/cucumber-reports/cucumber.json" ]; then
        echo ""
        echo "📊 Test Sonuçları:"
        echo "----------------"
        echo "✨ Senaryo Detayları:"
        
        jq -r '
          .[] | 
          "✨ Senaryo Detayları:\n" +
          "🌟 Feature: \(.name)\n" +
          (.elements[] | 
            "  📝 Senaryo: \(.name)\n" +
            "    Adımlar:\n" +
            (.steps[] | 
              "      " + 
              (if .result.status == "passed" then "✅ " 
               elif .result.status == "failed" then "❌ " 
               elif .result.status == "skipped" then "⏭️ "
               elif .result.status == "pending" then "⏳ "
               else "❓ " end) +
              "\(.keyword | rtrimstr(" ")) \(.name)\n" +
              if .result.status == "failed" then "        ❗ Hata: \(.result.error_message)\n" else "" end
            )
          )
        ' target/cucumber-reports/cucumber.json

        echo ""
        echo "📈 Test İstatistikleri:"
        PASSED=$(jq '[.[] | .elements[] | .steps[] | select(.result.status == "passed")] | length' target/cucumber-reports/cucumber.json)
        FAILED=$(jq '[.[] | .elements[] | .steps[] | select(.result.status == "failed")] | length' target/cucumber-reports/cucumber.json)
        SKIPPED=$(jq '[.[] | .elements[] | .steps[] | select(.result.status == "skipped")] | length' target/cucumber-reports/cucumber.json)
        PENDING=$(jq '[.[] | .elements[] | .steps[] | select(.result.status == "pending")] | length' target/cucumber-reports/cucumber.json)
        TOTAL=$((PASSED + FAILED + SKIPPED + PENDING))
        
        echo "✅ Başarılı Adım: $PASSED"
        echo "❌ Başarısız Adım: $FAILED"
        echo "⏭️ Atlanan Adım: $SKIPPED"
        echo "⏳ Bekleyen Adım: $PENDING"
        echo "📊 Toplam Adım: $TOTAL"
        
        {
          echo "Test Özeti"
          echo "=========="
          echo "Tarih: $(date)"
          echo "Branch: $CI_COMMIT_REF_NAME"
          echo "Commit: $CI_COMMIT_SHA"
          echo ""
          echo "Sonuçlar:"
          echo "✅ Başarılı: $PASSED"
          echo "❌ Başarısız: $FAILED"
          echo "⏭️ Atlanan: $SKIPPED"
          echo "⏳ Bekleyen: $PENDING"
          echo "📊 Toplam: $TOTAL"
          
          if [ "$FAILED" -gt 0 ]; then
            echo ""
            echo "❗ Başarısız Test Detayları:"
            jq -r '.[] | .elements[] | select(.steps[].result.status == "failed") | "Feature: \(.name)\nSenaryo: \(.name)\nHata: \(.steps[] | select(.result.status == "failed") | .result.error_message)"' target/cucumber-reports/cucumber.json
          fi
        } > test_summary.txt
      fi

    - echo "📋 Allure raporu oluşturuluyor..."
    - mvn allure:report || true
    - echo "✅ Test aşaması tamamlandı"

  artifacts:
    when: always
    reports:
      junit:
        - target/cucumber-reports/junit.xml
        - target/surefire-reports/TEST-*.xml
    paths:
      - target/allure-results/
      - target/allure-report/
      - target/cucumber-reports/
      - target/surefire-reports/
      - test_summary.txt
    expire_in: 1 week

allure-report:
  stage: report
  script:
    - echo "📁 Dizinler oluşturuluyor..."
    - apt-get update && apt-get install -y wget unzip
    - wget https://github.com/allure-framework/allure2/releases/download/2.24.1/allure-2.24.1.zip
    - unzip allure-2.24.1.zip -d /opt/
    - export PATH=$PATH:/opt/allure-2.24.1/bin
    
    # Allure sonuçlarını kopyala ve rapor oluştur
    - mkdir -p public/allure-results
    - cp -r target/allure-results/* public/allure-results/ || true
    - cd public && allure generate allure-results -o allure-report --clean
    
    # Statik dosyaları düzelt
    - |
      if [ -d "allure-report" ]; then
        echo "Fixing static file paths in Allure report..."
        find allure-report -type f -name "*.html" -exec sed -i 's/\"\/styles/\"styles/g' {} +
        find allure-report -type f -name "*.html" -exec sed -i 's/\"\/app/\"app/g' {} +
        find allure-report -type f -name "*.html" -exec sed -i 's/\"\/widgets/\"widgets/g' {} +
        find allure-report -type f -name "*.html" -exec sed -i 's/\"\/plugins/\"plugins/g' {} +
        find allure-report -type f -name "*.js" -exec sed -i 's/\"\/styles/\"styles/g' {} +
        find allure-report -type f -name "*.js" -exec sed -i 's/\"\/app/\"app/g' {} +
        find allure-report -type f -name "*.js" -exec sed -i 's/\"\/widgets/\"widgets/g' {} +
        find allure-report -type f -name "*.js" -exec sed -i 's/\"\/plugins/\"plugins/g' {} +
      fi
    
    # Cucumber raporlarını ve test özetini kopyala
    - mkdir -p cucumber-report
    - cp -r ../target/cucumber-reports/* cucumber-report/ || true
    - cp ../test_summary.txt . || true
    
    # Index sayfasını oluştur
    - |
      cat << 'EOF' > index.html
      <!DOCTYPE html>
      <html>
      <head>
          <meta charset="utf-8">
          <title>🔍 Test Raporları</title>
          <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
          <base href="./">
          <style>
              body { 
                  font-family: Arial, sans-serif; 
                  margin: 40px;
                  background: #f5f5f5;
              }
              h1 { 
                  color: #333;
                  text-align: center;
                  margin-bottom: 30px;
              }
              .reports {
                  max-width: 600px;
                  margin: 20px auto;
                  background: white;
                  padding: 20px;
                  border-radius: 10px;
                  box-shadow: 0 2px 5px rgba(0,0,0,0.1);
              }
              .report-link {
                  display: flex;
                  align-items: center;
                  color: #0366d6;
                  text-decoration: none;
                  padding: 15px;
                  margin: 10px 0;
                  border-radius: 5px;
                  transition: all 0.3s ease;
              }
              .report-link:hover {
                  background: #f6f8fa;
                  transform: translateX(5px);
              }
              .report-link i {
                  margin-right: 10px;
                  font-size: 24px;
              }
          </style>
      </head>
      <body>
          <h1>📊 Test Raporları</h1>
          <div class="reports">
              <a href="./allure-report/index.html" class="report-link" target="_blank">
                  <i class="fas fa-chart-bar"></i>
                  Allure Report
              </a>
              <a href="./cucumber-report/report.html" class="report-link" target="_blank">
                  <i class="fas fa-file-alt"></i>
                  Cucumber Report
              </a>
              <a href="./test_summary.txt" class="report-link" target="_blank">
                  <i class="fas fa-file-text"></i>
                  Test Özeti
              </a>
          </div>
      </body>
      </html>
      EOF
    - cd ..
    - echo "✨ Raporlama tamamlandı"
  artifacts:
    paths:
      - public
    expire_in: 30 days
  dependencies:
    - test

pages:
  stage: deploy
  script:
    - echo "🚀 Pages dağıtımı başlıyor..."
  artifacts:
    paths:
      - public
  dependencies:
    - allure-report
  only:
    - main