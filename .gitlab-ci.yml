image: maven:3.9.6-eclipse-temurin-17

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  CHROME_OPTIONS: "--no-sandbox --headless --disable-dev-shm-usage"
  DOCKER_TLS_CERTDIR: "/certs"
  CHROMEDRIVER_VERSION: "114.0.5735.90"

services:
  - name: docker:dind
    command: ["--tls=false"]

cache:
  paths:
    - .m2/repository
    - .cache/selenium
  key: "$CI_COMMIT_REF_SLUG"

stages:
  - test
  - deploy

test:
  stage: test
  before_script: |
    apt-get update && apt-get install -y wget unzip curl gnupg2
    wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list
    apt-get update && apt-get install -y google-chrome-stable
    mkdir -p .cache/selenium
    wget -q -O /tmp/chromedriver.zip "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/114.0.5735.90/linux64/chromedriver-linux64.zip"
    unzip -q /tmp/chromedriver.zip -d /tmp
    mv /tmp/chromedriver-linux64/chromedriver /usr/local/bin/chromedriver
    chmod +x /usr/local/bin/chromedriver
    echo "Chrome version: $(google-chrome --version)"
    echo "ChromeDriver version: $(chromedriver --version)"
    export CHROME_BIN=/usr/bin/google-chrome
  script: |
    set -e  # Herhangi bir hata olursa script'i durdur
    echo "🚀 Starting test execution..."
    java -version
    mvn -version
    echo "Configuring Chrome options..."
    export CHROME_OPTIONS="--headless --no-sandbox --disable-dev-shm-usage --disable-gpu --remote-debugging-port=9222"
    
    # Test çalıştırma ve sonuçları kontrol etme
    if ! mvn clean test; then
      echo "❌ Tests failed"
      exit 1
    fi
    
    # Allure raporu oluşturma
    if ! mvn allure:report; then
      echo "❌ Allure report generation failed"
      exit 1
    fi
    
    # Artifact dizinlerini kontrol et
    if [ ! -d "target/allure-results" ] || [ ! -d "target/allure-report" ]; then
      echo "❌ Required directories not found"
      exit 1
    fi
  artifacts:
    when: always  # Test başarısız olsa bile artifact'ları topla
    reports:
      junit: 
        - target/surefire-reports/TEST-*.xml
    paths:
      - target/allure-results/**/*  # Wildcard kullanımı düzeltildi
      - target/allure-report/**/*   # Wildcard kullanımı düzeltildi
      - target/test-logs/**/*       # Wildcard kullanımı düzeltildi
    expire_in: 1 week
  retry: 2
  rules:
    - if: $CI_COMMIT_BRANCH
      when: always
  allow_failure: false  # Job başarısız olursa pipeline'ı durdur

pages:
  stage: deploy
  dependencies:
    - test
  script: |
    mkdir -p public
    cp -r target/allure-report/* public
    echo "Test Summary:" > public/summary.txt
    echo "Build $CI_BUILD_ID" >> public/summary.txt
    echo "Branch $CI_COMMIT_REF_NAME" >> public/summary.txt
    echo "Commit $CI_COMMIT_SHA" >> public/summary.txt
    echo "Date $(date)" >> public/summary.txt
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - main