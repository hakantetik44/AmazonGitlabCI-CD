variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  CHROME_OPTIONS: "--no-sandbox --headless --disable-dev-shm-usage"
  DOCKER_TLS_CERTDIR: "/certs"
  CHROMEDRIVER_VERSION: "114.0.5735.90"
  FF_USE_LEGACY_ARTIFACTS_UPLOAD: "true"
  ARTIFACT_COMPRESSION_LEVEL: "fastest"
  TRANSFER_METER_FREQUENCY: "2s"
  GIT_STRATEGY: clone

image: maven:3.9.6-eclipse-temurin-17

services:
  - name: docker:dind
    command: ["--tls=false"]

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .m2/repository
    - .cache/selenium

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "external_pull_request_event"
      when: never
    - when: always

stages:
  - test
  - build
  - deploy

test:
  stage: test
  before_script:
    - apt-get update && apt-get install -y wget unzip curl gnupg2
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    - echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google.list
    - apt-get update && apt-get install -y google-chrome-stable
    - mkdir -p .cache/selenium
    - wget -q -O /tmp/chromedriver.zip "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/${CHROMEDRIVER_VERSION}/linux64/chromedriver-linux64.zip"
    - unzip -q /tmp/chromedriver.zip -d /tmp
    - mv /tmp/chromedriver-linux64/chromedriver /usr/local/bin/chromedriver
    - chmod +x /usr/local/bin/chromedriver
    - export CHROME_BIN=/usr/bin/google-chrome
    - echo "Chrome version: $(google-chrome --version)"
    - echo "ChromeDriver version: $(chromedriver --version)"
  script:
    - echo "üöÄ Starting test execution..."
    - java -version
    - mvn -version
    - export CHROME_OPTIONS="--headless --no-sandbox --disable-dev-shm-usage --disable-gpu --remote-debugging-port=9222"
    - |
      mvn clean test allure:report || {
        echo "‚ö†Ô∏è Test or report generation failed"
        mkdir -p target/allure-results target/allure-report target/surefire-reports
      }
    - |
      if [ -d "target" ]; then
        echo "üìÅ Target directory contents:"
        ls -la target/
        tar czf artifacts.tar.gz target/
        echo "‚úÖ Artifact preparation completed"
      else
        echo "‚ö†Ô∏è Target directory not found"
        mkdir -p target/surefire-reports
        tar czf artifacts.tar.gz target/
      fi
  artifacts:
    when: always
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
    paths:
      - artifacts.tar.gz
      - target/
      - target/surefire-reports/
      - target/allure-results/
      - target/allure-report/
    expire_in: 1 week
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
  rules:
    - if: $CI_COMMIT_BRANCH
      when: always

build:
  stage: build
  script:
    - echo "Building project..."
    - mvn package
  artifacts:
    paths:
      - target/*.jar
    expire_in: 1 week
  only:
    - main

pages:
  stage: deploy
  dependencies:
    - test
  script:
    - mkdir -p public
    - |
      if [ -f artifacts.tar.gz ]; then
        tar xzf artifacts.tar.gz
      else
        echo "<html><body><h1>Test Results Not Available</h1></body></html>" > public/index.html
      fi
    - |
      if [ -d "target/allure-report" ]; then
        cp -r target/allure-report/* public/
      else
        echo "<html><body><h1>Allure Report Not Found</h1></body></html>" > public/index.html
      fi
    - |
      echo "Test Summary" > public/summary.txt
      echo "=============" >> public/summary.txt
      echo "Build: $CI_BUILD_ID" >> public/summary.txt
      echo "Branch: $CI_COMMIT_REF_NAME" >> public/summary.txt
      echo "Commit: $CI_COMMIT_SHA" >> public/summary.txt
      echo "Date: $(date)" >> public/summary.txt
      if [ -d "target/surefire-reports" ]; then
        TOTAL_TESTS=$(grep -h "<testcase" target/surefire-reports/TEST-*.xml | wc -l)
        FAILED_TESTS=$(grep -h "<failure" target/surefire-reports/TEST-*.xml | wc -l)
        echo "Total Tests: $TOTAL_TESTS" >> public/summary.txt
        echo "Failed Tests: $FAILED_TESTS" >> public/summary.txt
      else
        echo "No test results found" >> public/summary.txt
      fi
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - main
