variables:
 MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
 CHROME_OPTIONS: "--no-sandbox --headless --disable-dev-shm-usage"
 DOCKER_TLS_CERTDIR: "/certs"
 FF_USE_LEGACY_ARTIFACTS_UPLOAD: "true"
 ARTIFACT_COMPRESSION_LEVEL: "fastest"
 TRANSFER_METER_FREQUENCY: "2s"
 GIT_STRATEGY: clone

image: maven:3.9.6-eclipse-temurin-17

services:
 - name: docker:dind
   command: ["--tls=false"]

cache:
 paths:
   - .m2/repository
   - .cache/selenium
 key: "$CI_COMMIT_REF_SLUG"

workflow:
 rules:
   - if: $CI_PIPELINE_SOURCE == 'external_pull_request_event'
     when: never
   - when: always

stages:
 - test
 - build
 - deploy

test:
 stage: test
 before_script:
   - 'apt-get update && apt-get install -y wget unzip curl gnupg2'
   - 'wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -'
   - 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
   - 'apt-get update && apt-get install -y google-chrome-stable'
   - |
     CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | cut -d'.' -f1)
     CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}")
     
     echo "Chrome Version: ${CHROME_VERSION}"
     echo "ChromeDriver Version: ${CHROMEDRIVER_VERSION}"
     
     mkdir -p .cache/selenium
     wget -q -O /tmp/chromedriver.zip "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
     unzip -q /tmp/chromedriver.zip -d /tmp
     mv /tmp/chromedriver /usr/local/bin/chromedriver
     chmod +x /usr/local/bin/chromedriver
   - 'export CHROME_BIN=/usr/bin/google-chrome'
   
 script:
   - 'echo "🚀 Tests başlatılıyor..."'
   - 'java -version'
   - 'mvn -version'
   - 'export CHROME_OPTIONS="--headless --no-sandbox --disable-dev-shm-usage --disable-gpu --remote-debugging-port=9222"'
   - |
     mvn clean test allure:report || {
       echo "⚠️ Test veya rapor oluşturma hatası"
       mkdir -p target/allure-results target/allure-report target/surefire-reports
     }
   - |
     if [ -d "target" ]; then
       echo "📁 Target dizini kontrol ediliyor..."
       ls -la target/
       
       mkdir -p public/reports
       
       if [ -d "target/surefire-reports" ]; then
         echo "📋 Test raporları kopyalanıyor..."
         cp -r target/surefire-reports public/reports/
       fi
       
       if [ -d "target/allure-results" ]; then
         echo "📊 Allure raporları kopyalanıyor..."
         cp -r target/allure-results public/reports/
       fi
       
       echo "🗜️ Artifactlar hazırlanıyor..."
       cd target && tar czf ../artifacts.tar.gz . && cd ..
     else
       echo "⚠️ Target dizini bulunamadı"
       exit 1
     fi
     
 artifacts:
   when: always
   expire_in: 1 week
   reports:
     junit: target/surefire-reports/TEST-*.xml
   paths:
     - artifacts.tar.gz
     - public/
     - target/

 retry:
   max: 2
   when:
     - runner_system_failure
     - stuck_or_timeout_failure

build:
 stage: build
 script:
   - 'echo "Building project..."'
   - 'mvn package'
 artifacts:
   paths:
     - target/*.jar
   expire_in: 1 week
 only:
   - main

pages:
 stage: deploy
 dependencies:
   - test
 script:
   - |
     if [ -d "public/reports" ]; then
       echo "📊 Raporlar kopyalanıyor..."
       cp -r public/reports/* public/
     fi
   - |
     {
       echo "Test Özeti"
       echo "==========="
       echo "Build: $CI_BUILD_ID"
       echo "Branch: $CI_COMMIT_REF_NAME"
       echo "Commit: $CI_COMMIT_SHA"
       echo "Tarih: $(date)"
       echo
       echo "Test Sonuçları"
       echo "=============="
       
       if [ -d "target/surefire-reports" ]; then
         TOTAL=$(grep -c "<testcase" target/surefire-reports/TEST-*.xml 2>/dev/null || echo "0")
         FAILED=$(grep -c "<failure" target/surefire-reports/TEST-*.xml 2>/dev/null || echo "0")
         echo "Toplam Test: $TOTAL"
         echo "Başarısız: $FAILED"
       else
         echo "Test sonuçları bulunamadı"
       fi
     } > public/summary.txt
 artifacts:
   paths:
     - public
   expire_in: 30 days
 only:
   - main