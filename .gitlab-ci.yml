variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  CHROME_OPTIONS: "--no-sandbox --headless --disable-dev-shm-usage"
  DOCKER_TLS_CERTDIR: "/certs"
  CHROMEDRIVER_VERSION: "114.0.5735.90"

image: maven:3.9.6-eclipse-temurin-17

services:
  - name: docker:dind
    command: ["--tls=false"]

cache:
  paths:
    - .m2/repository
    - .cache/selenium
  key: "$CI_COMMIT_REF_SLUG"

stages:
  - test
  - deploy

test:
  stage: test
  before_script:
    # Chrome kurulumu
    - apt-get update && apt-get install -y wget unzip curl gnupg2
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    - echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list
    - apt-get update && apt-get install -y google-chrome-stable
    
    # ChromeDriver kurulumu
    - mkdir -p .cache/selenium
    - wget -q -O /tmp/chromedriver.zip "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/114.0.5735.90/linux64/chromedriver-linux64.zip"
    - unzip -q /tmp/chromedriver.zip -d /tmp
    - mv /tmp/chromedriver-linux64/chromedriver /usr/local/bin/chromedriver
    - chmod +x /usr/local/bin/chromedriver
    
    # Versiyon kontrolü
    - echo "Chrome version: $(google-chrome --version)"
    - echo "ChromeDriver version: $(chromedriver --version)"
    - echo "Java version: $(java -version)"
    - echo "Maven version: $(mvn -version)"
    
    # Çalışma dizini kontrolü
    - pwd
    - ls -la

  script:
    # Debug modu aktif
    - set -x
    
    # Chrome options ayarları
    - export CHROME_BIN=/usr/bin/google-chrome
    - export CHROME_OPTIONS="--headless --no-sandbox --disable-dev-shm-usage --disable-gpu --remote-debugging-port=9222"
    
    # Test çalıştırma
    - echo "🚀 Testler başlatılıyor..."
    - |
      mvn clean test allure:report
      TEST_EXIT_CODE=$?
      echo "Maven test exit code: $TEST_EXIT_CODE"
      
      if [ $TEST_EXIT_CODE -eq 0 ]; then
        echo "✅ Testler başarıyla tamamlandı"
      else
        echo "❌ Test hatası oluştu"
      fi
    
    # Target dizini kontrol
    - |
      if [ -d "target" ]; then
        echo "Target dizini içeriği:"
        ls -la target/
        
        # Artifact oluşturma
        if [ -d "target/surefire-reports" ] || [ -d "target/allure-results" ]; then
          tar czf artifacts.tar.gz -C target . || echo "tar işlemi başarısız: $?"
          echo "Artifacts başarıyla oluşturuldu"
        else
          echo "Test raporları bulunamadı"
          exit 1
        fi
      else
        echo "Target dizini bulunamadı"
        exit 1
      fi

  artifacts:
    when: always
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
    paths:
      - target/
      - artifacts.tar.gz
      - target/allure-results/
      - target/allure-report/
      - target/surefire-reports/
    expire_in: 1 week
    
  # Test başarısız olursa yeniden deneme
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure

  # Hata durumunda pipeline'ı durdur
  allow_failure: false

pages:
  stage: deploy
  dependencies:
    - test
  script:
    - mkdir -p public
    # Test sonuçlarını ve raporları public dizinine kopyala
    - |
      if [ -f artifacts.tar.gz ]; then
        tar xzf artifacts.tar.gz -C public/
        echo "Artifacts başarıyla açıldı"
      else
        echo "Artifacts bulunamadı"
        echo "<html><body><h1>Test Sonuçları Mevcut Değil</h1></body></html>" > public/index.html
      fi
    
    # Özet rapor oluştur
    - |
      {
        echo "Test Özeti"
        echo "==========="
        echo "Build: $CI_BUILD_ID"
        echo "Branch: $CI_COMMIT_REF_NAME"
        echo "Commit: $CI_COMMIT_SHA"
        echo "Tarih: $(date)"
        echo
        echo "Test Sonuçları"
        echo "=============="
        
        if [ -d "target/surefire-reports" ]; then
          TOTAL_TESTS=$(grep -h "<testcase" target/surefire-reports/TEST-*.xml | wc -l)
          FAILED_TESTS=$(grep -h "<failure" target/surefire-reports/TEST-*.xml | wc -l)
          echo "Toplam Test: $TOTAL_TESTS"
          echo "Başarısız Test: $FAILED_TESTS"
        else
          echo "Test sonuçları bulunamadı"
        fi
      } > public/summary.txt

  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - main